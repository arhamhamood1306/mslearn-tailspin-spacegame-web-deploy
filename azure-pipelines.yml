trigger:
- '*'

variables:
  buildConfiguration: 'Release'

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-20.04'
      demands:
      - npm

    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '6.x'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'

    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false

    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
      displayName: 'Compile Sass assets'

    - task: gulp@1
      displayName: 'Run gulp tasks'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy to Staging and Canary'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to Staging'
    pool:
      vmImage: $(vmImageName)
    environment: 'staging'
    strategy:
      canary:
        increments: [2]
        preDeploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Deploy to Staging Slot'
            inputs:
              azureSubscription: 'Azure subscription 1(2bfbd01e-8d5a-4dda-a506-f8bab7025c23)'
              appType: 'webApp'
              appName: '$(WebAppNameDev)'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
              slotName: 'staging'
        deploy:
          steps:
          - task: AzureAppServiceManage@0
            displayName: 'Route 10% traffic to Staging Slot'
            inputs:
              azureSubscription: 'Azure subscription 1(2bfbd01e-8d5a-4dda-a506-f8bab7025c23)'
              action: 'Set Traffic Percentage'
              appName: '$(WebAppNameDev)'
              resourceGroupName: 'rg-jira-db-001'
              slotName: 'staging'
              trafficPercentage: '10'
          - script: echo 'Monitoring Canary Deployment with 10% Traffic'
            displayName: 'Monitor Canary Deployment'
            timeoutInMinutes: 10
          - task: AzureAppServiceManage@0
            displayName: 'Route 50% traffic to Staging Slot'
            inputs:
              azureSubscription: 'Azure subscription 1(2bfbd01e-8d5a-4dda-a506-f8bab7025c23)'
              action: 'Set Traffic Percentage'
              appName: '$(WebAppNameDev)'
              resourceGroupName: 'rg-jira-db-001'
              slotName: 'staging'
              trafficPercentage: '50'
          - script: echo 'Monitoring Canary Deployment with 50% Traffic'
            displayName: 'Monitor Canary Deployment'
            timeoutInMinutes: 20
        postRouteTraffic:
          steps:
          - task: AzureAppServiceManage@0
            displayName: 'Route 100% traffic to Staging Slot'
            inputs:
              azureSubscription: 'Azure subscription 1(2bfbd01e-8d5a-4dda-a506-f8bab7025c23)'
              action: 'Set Traffic Percentage'
              appName: '$(WebAppNameDev)'
              resourceGroupName: 'rg-jira-db-001'
              slotName: 'staging'
              trafficPercentage: '100'
        on:
          success:
            steps:
            - task: AzureAppServiceManage@0
              displayName: 'Swap Staging to Production'
              inputs:
                azureSubscription: 'Azure subscription 1(2bfbd01e-8d5a-4dda-a506-f8bab7025c23)'
                action: 'Swap Slots'
                appName: '$(WebAppNameDev)'
                resourceGroupName: 'rg-jira-db-001'
                sourceSlot: 'staging'
                targetSlot: 'production'